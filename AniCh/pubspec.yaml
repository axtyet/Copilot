name: xs
description: "A new Flutter project."
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: '>=3.4.4 <4.0.0'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter

  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.6

  # 框架、工具
  get: ^4.6.6 # 状态管理、路由管理、国际化
  protobuf: ^3.1.0 # dart pub global activate protoc_plugin
  dio: ^5.4.3+1 # 网络请求
  get_storage: ^2.1.1 # 持久化
  dynamic_color: ^1.7.0 # 动态颜色
  logger: ^2.4.0 # 日志
  intl: ^0.19.0 # 国际化

  # 系统交互
  wakelock_plus: ^1.2.7 # 屏幕常亮
  window_manager: ^0.4.0 # 窗口管理
  package_info_plus: ^8.0.1 # 包信息
  device_info_plus: ^10.1.1 # 设备信息
  floating: ^4.0.1 # 画中画
  perfect_volume_control: ^1.0.5 # 音量控制
  screen_brightness: ^0.2.2+1 # 亮度控制
  auto_orientation: ^2.3.1 # 屏幕方向
  photo_view: ^0.15.0 # 图片预览
  image_gallery_saver: ^2.0.3 # 图片保存
  file_picker: ^8.0.7 # 文件选择
  permission_handler: ^11.3.1 # 权限管理
  path_provider: ^2.1.4 # 常用路径
  url_launcher: ^6.3.0 #打开链接

  # Widget
  flutter_staggered_grid_view: ^0.7.0 # 瀑布流
  flutter_svg: ^2.0.10+1 # SVG
  flutter_smart_dialog: ^4.9.7+9 # 弹窗
  
  # 视频播放
  media_kit: ^1.1.10+1
  media_kit_video: ^1.2.4
  media_kit_libs_video: ^1.0.4

dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^3.0.0
  flutter_launcher_icons: ^0.13.1
  change_app_package_name: ^1.5.0

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/images/
    - assets/icons/
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  fonts:
    - family: Ubuntu
      fonts:
        - asset: fonts/Ubuntu.ttf
        # - asset: fonts/Ubuntu-RI.ttf
        #   style: italic
        # - asset: fonts/Ubuntu-M.ttf
        #   weight: 700
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages

# flutter pub run flutter_launcher_icons:main
flutter_launcher_icons:
  android: true
  ios: true
  remove_alpha_ios: true
  image_path: assets/images/icon.png
  image_path_android: assets/images/icon.png
  image_path_ios: assets/images/icon.png
  adaptive_icon_background: "#ffffff"
  adaptive_icon_foreground: assets/images/icon.png
  adaptive_icon_monochrome: assets/images/icon.png
  macos:
    generate: true
    image_path: assets/images/icon.png
  windows:
    generate: true
    image_path: assets/images/icon.png
    icon_size: 256 # min:48, max:256, default: 48
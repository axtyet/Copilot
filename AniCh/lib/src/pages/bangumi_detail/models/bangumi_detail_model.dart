///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class BangumiDetailModelRating {
/*
{
  "site": "tmdb",
  "score": 0
} 
*/

  String? site;
  num? score;

  BangumiDetailModelRating({
    this.site,
    this.score,
  });
  BangumiDetailModelRating.fromJson(Map<String, dynamic> json) {
    site = json['site']?.toString();
    score = json['score'];
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['site'] = site;
    data['score'] = score;
    return data;
  }
}

class BangumiDetailModelMarks {
/*
{
  "name": "WHITEFOX",
  "count": 101
} 
*/

  String? name;
  int? count;

  BangumiDetailModelMarks({
    this.name,
    this.count,
  });
  BangumiDetailModelMarks.fromJson(Map<String, dynamic> json) {
    name = json['name']?.toString();
    count = json['count']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['name'] = name;
    data['count'] = count;
    return data;
  }
}

class BangumiDetailModel {
/*
{
  "id": 33361,
  "airdate": 1721260800000,
  "title": "战国妖狐 千魔混沌篇",
  "image": "https://image.tmdb.org/t/p/w220_and_h330_face/ssKE3DzuWhIziihvQqA6QHingJ8.jpg",
  "genres": [
    "动画"
  ],
  "marks": [
    {
      "name": "WHITEFOX",
      "count": 101
    }
  ],
  "rating": [
    {
      "site": "tmdb",
      "score": 0
    }
  ],
  "overview": "　　「千魔混沌篇」的主角是拥有千之闇的灵力改造人类少年「千夜」，以及希望变强来保护他的人类少女「月湖」。他们受到真介的敬爱与守护，妖狐小玉则在寻找暴走的迅火踪迹。此外，还有对千夜的力量虎视眈眈，立于闇之顶点的黑龙少年「ムド」。\n\n　　千夜在面对自身力量并不断追求极致的过程中，一个个强敌接踵而来 —— 在这段旅程的终点等待着他的会是什么呢？故事的主角从迅火交棒给千夜，我们将见证他带来的全新冒险！　",
  "episode": 2,
  "episodes_total": 22,
  "status": "standard"
} 
*/

  int? id;
  int? airdate;
  String? title;
  String? image;
  List<String?>? genres;
  List<BangumiDetailModelMarks?>? marks;
  List<BangumiDetailModelRating?>? rating;
  String? overview;
  int? episode;
  int? episodesTotal;
  String? status;

  BangumiDetailModel({
    this.id,
    this.airdate,
    this.title,
    this.image,
    this.genres,
    this.marks,
    this.rating,
    this.overview,
    this.episode,
    this.episodesTotal,
    this.status,
  });
  BangumiDetailModel.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    airdate = json['airdate']?.toInt();
    title = json['title']?.toString();
    image = json['image']?.toString();
    if (json['genres'] != null) {
      final v = json['genres'];
      final arr0 = <String>[];
      v.forEach((v) {
        arr0.add(v.toString());
      });
      genres = arr0;
    }
    if (json['marks'] != null) {
      final v = json['marks'];
      final arr0 = <BangumiDetailModelMarks>[];
      v.forEach((v) {
        arr0.add(BangumiDetailModelMarks.fromJson(v));
      });
      marks = arr0;
    }
    if (json['rating'] != null) {
      final v = json['rating'];
      final arr0 = <BangumiDetailModelRating>[];
      v.forEach((v) {
        arr0.add(BangumiDetailModelRating.fromJson(v));
      });
      rating = arr0;
    }
    overview = json['overview']?.toString();
    episode = json['episode']?.toInt();
    episodesTotal = json['episodes_total']?.toInt();
    status = json['status']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['airdate'] = airdate;
    data['title'] = title;
    data['image'] = image;
    if (genres != null) {
      final v = genres;
      final arr0 = [];
      for (var v in v!) {
        arr0.add(v);
      }
      data['genres'] = arr0;
    }
    if (marks != null) {
      final v = marks;
      final arr0 = [];
      for (var v in v!) {
        arr0.add(v!.toJson());
      }
      data['marks'] = arr0;
    }
    if (rating != null) {
      final v = rating;
      final arr0 = [];
      for (var v in v!) {
        arr0.add(v!.toJson());
      }
      data['rating'] = arr0;
    }
    data['overview'] = overview;
    data['episode'] = episode;
    data['episodes_total'] = episodesTotal;
    data['status'] = status;
    return data;
  }
}
